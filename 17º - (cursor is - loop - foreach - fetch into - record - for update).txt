--CURSOR LOOP
DECLARE
VCOD_ALUNO *TABELA*.COD_ALUNO%TYPE;
VNOME *TABELA*.NOME%TYPE;
CURSOR CUR1 IS --DECLARA O CURSOR
SELECT COD_NOME, NOME --PROPRIEDADES DEFINIDAS PARA O CURSOR
FROM *TABELA*;
BEGIN
OPEN CUR1;--ABRE O CURSOR PARA UTILIZAÇÃO
LOOP
FETCH CUR1 INTO VCOD_ALUNO, VNOME; --FETCH PEGA REGISTRO A REGISTRO E JOGA NAS VARIAVEIS CRIADAS
EXISTS WHEN CUR1%ROWCOUNT >= 10 OR CUR1%NOTFOUND; --SE A QUANTIDADE DO CURSO >= 10 OU QUANDO NÃO ENCONTRAR MAIS REGISTROS
Dbms_Output.Put_Line('CODIGO: '|| LPad(VCOD_ALUNO, 4, '0') || ' - ' ||VNOME); -- A CADA PASSAGEM RETORNA O RESULTADO
END LOOP;
CLOSE CUR1; --FINALIZA A UTILIZAÇÃO DO CURSOR
END;

--CURSOR RECORD LOOP
DECLARE
CURSOR CUR IS --CRIA UM CURSOR COM TODOS OS REGISTROS DA TABELA
SELECT * FROM *TABELA*; 
REG CUR%ROWTYPE; --FAZ UM RECORD DO MESMO TIPO DA TABELA
BEGIN
OPEN CUR;
LOOP
FETCH CUR INTO REG; --PEGA OS DADOS DO CURSOR E JOGA PARA O REG(REGISTROS)
EXISTS WHEN CUR%ROWTYPE > 10 OR CUR%NOTFOUND;
Dbms_Output.Put_Line('CÓDIGO '||LPad(REG.COD_ALUNO, 5, '0') || ' - '|| 'NOME: '||REG.NOME);
END LOOP;
CLOSE CUR;
END;

--CURSOR RECORD FOR LOOP (O MAIS ACONCELHAVEL PELO INSTRUTOR)
DECLARE
CURSOR CUR IS --CRIA UM CURSOR COM TODOS OS REGISTROS DA TABELA
SELECT * FROM *TABELA*; 
REG *TABELA*%ROWTYPE; --FAZ UM RECORD DO MESMO TIPO DA TABELA
BEGIN
FOR REG IS CUR --FOR(FOREACH) VAI RECEBER LINHA A LINHA DO CURSOR --EQUANTO EXISTIR RESULTADO SERÁ REALIZADO O LOOP
LOOP
Dbms_Output.Put_Line('CÓDIGO '||LPad(REG.COD_ALUNO, 5, '0') || ' - '|| 'NOME: '||REG.NOME);
END LOOP;
END;

--REFAZENDO O MESMO EXEMPLO ACIMA PORÉM SEM O CURSOR --UTIL APENAS QUANDO O SELECT FOR PEQUENO
DECLARE
REG *TABELA*%ROWTYPE; --FAZ UM RECORD DO MESMO TIPO DA TABELA
BEGIN
FOR REG IN(SELECT * FROM *TABELA*) 
LOOP
Dbms_Output.Put_Line('CÓDIGO '||LPad(REG.COD_ALUNO, 5, '0') || ' - '|| 'NOME: '||REG.NOME);
END LOOP;
END;

--for update de uma coluna
DECLARE
CURSOR CUR(PCOD_ALUNO NUMBER) IS --DEVE SE PASSAR JUNTO DO CURSOR, O PARAMETRO 
SELECT * FROM *TABELA*
WHERE COD_ALUNO = PCOD_ALUNO
FOR UPDATE OF NOME NOWAIT; --BLOQUEIA APENA A COLUNA INFORMADA PARA ALTERAÇÃO
REG CUR%ROWTYPE;
BEGIN
OPEN CUR(&CODIGO); --ABRIU O CURSOR PASSANDO O PARAMETRO DECLARADO NA CONSTRUÇÃO DO MESMO
FETCH CUR INTO REG;
Dbms_Output.Put_Line('CÓDIGO '||LPad(REG.COD_ALUNO, 5, '0') || ' - '|| 'NOME: '||REG.NOME);
CLOSE CUR;
END; 

--FOR UPDATE DA TABELA COMPLETA
DECLARE
CURSOR CUR IS 
SELECT NOME FROM *TABELA*
FOR UPDATE; --BLOQUEIA TODA A TABELA
REG CUR%ROWTYPE; --GERA UM RECORD DO TIPO DO CURSOR
BEGIN
FOR REG IN CUR --FOREACH
LOOP
UPDATE *TABELA*
SET NOME= InitCap(REG.NOME) --FORMATAR TODOS OS NOME PARA QUE A PRIMEIRA LETRA DE CADA NOME SEJA MAIUSCULA
WHERE CURRENT OF CUR; --CADA VEZ QUE PASSAR PELO REGISTRO, É BLOQUEADO PARA QUE NÃO POSSA SER UTILIZADO POR OUTRA PESSOA
Dbms_Output.Put_Line('NOME: '||InitCap(REG.NOME));
END LOOP;
COMMIT;
END;