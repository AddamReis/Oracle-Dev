IN -- utilizado para mais de um parametro EX: WHERE CODIGO IN (530, 480, 720)
NOT IN --INVERSO DO IN, RETORNA OS VALORES NÃO SELECIONADOS EX: NOT IN (1,2,3) -RETORNA: 4, 5, 6...

FROM *TABELA 1*, (SELECT VALOR FROM CURSO) AS *TABELA 2* WHERE --É POSSÍVEL CRIAR UMA TABELA COM RETORNO DE UM SUBSELECT

INSERT INTO ALUNO(NOME, IDADE, SEXO) VALUES('&NOME', &IDADE, '&SEXO') 
--É POSSÍVEL UTILIZAR ESTE INSERT VARIAS VEZES POIS AO EXECUTAR, É EXIBIDO UMA JANELA ONDE DEVERÁ SER INFORMADO OS VALORES 
--ATIVAR A OPÇÃO NO --> SCRIPT --> ENABLE SUBSTITUTION VARIABLES! ACEITAR TAGS NO VALUES A SEREM INFORMADOS
--VARIÁVEL DE SUBSTITUIÇÃO

--ESSAS TAGS PODEM SER UTILIZADAS PARA SELECT E UPDATE, EX:
FROM *TABELA* WHERE NOME = '&NOME'

UPDATE *TABELA* SET IDADE = &IDADE WHERE ID = &ID

DELETE FROM *TABELA* WHERE SEXO = '&SEX'

CREATE TABLE LOJA2 AS SELECT * FROM LOJA1 --CRIANDO UMA CÓPIA DA TABELA LOJA1, COM OS MESMO REGISTROS E PASSANDO PARA A LOJA2

TRUNCATE TABLE *TABELA* --Não possuí clausula WHERE, deleta todos os registros, ROLLBACK NÃO SE APLICA AO TRUNCATE
--TRUNCATE NÃO GERA LOG, POR ISSO É IMPOSSÍVEL RECUPERAR OS DADOS 

SAVEPOINT DATA_24_08; --CRIA UM PONTO DE RESTAURAÇÃO DO BANCO
ROLLBACK TO SAVEPOINT DATA_24_08; --RESTAURA OS DADOS COMO ESTAVAM ATÉ O SAVEPOINT
