--RECORD --
--AO DECLARAR O RECORD, DEVE SE PASSAR AS COLUNAS QUE IRÃO PERTENCER AO MESMO, COMO SE FOSSE UMA TABELA,
--GERA COLUNAS E ATRIBUTOS PORÉM NÃO OCULPA O MESMO ESPAÇO QUE UMA TABELA
DECLARE 
TYPE REC_ALUNO IS RECORD --CRIA A RECORD E DEFINE QUAIS AS COLUNAS O MESMO POSSUIRÁ
(
COD_ALUNO NUMBER NOT NULL := 0,
NOME *TABELA*.NOME%TYPE,
CIDADE *TABELA*.CIDADE%TYPE
);
REGISTRO REC_ALUNO; --PASSA O INDEX DE REC_ANULO PARA REGISTRO, ASSIM PODENDO CHAMAR O MESMO COMO MOSTRA ABAIXO
BEGIN
REGISTRO.COD_ALUNO := 50;
REGISTRO.NOME := 'MASTER';
REGISTRO.CIDADE := 'NOVA MAUÁ';
Dbms_Output.Put_Line('CODIGO: '|| REGISTRO.COD_ALUNO);
...
END;

DECLARE 
REG *TABELA*%ROWTYPE; --RECORD --CRIA UM RECORD PARA UMA TABELA INTEIRA, ASSIM PODENDO UTILIZAR TODOS OS ATRIBUTOS
VCEP VARCHAR(10) := '1245780080'
BEGIN
SELECT  COD_ALUNO, NOME, CIDADE
INTO REG.COD_ANULO, REG.NOME, REG.CIDADE
FROM *TABELA*
WHERE COD_ALUNO = 1;
REG.CEP := '7878787845';
REG.SALARIO := '2500';
Dbms_Output.Put_Line('CÓDIGO: '||REG.ALUNO);
...
END;

--TABLE OF --MATRIZ --ARRAY
DECLARE 
TYPE T_ALUNO IS TABLE OF *TABELA*.NOME%TYPE --TABLE OF GERA A MATRIZ
INDEX BY BINARY_INTEGER; --BINARY É O INDICADOR DE POSIÇÃO INTEIRO
REGISTRO T_ALUNO; --RECORD
BEGIN
REGISTRO(1) := 'MARCIO'; --1º REGISTRO RECEBE O VALOR INFORMADO
REGISTRO(2) := 'ADDAM';
REGISTRO(3) := 'BELLA';
Dbms_Output.Put_Line('NOME 1: '||REGISTRO(1));--PASSA A POSIÇÃO DO REGISTRO QUE DESEJA EXIBIR
...
END;

DECLARE NOME_TYPE IS TABLE OF *ALUNO*.NOME%TYPE; --GERA UM VETOR DO TIPO NOME
NOME_TABLE NOME_TYPE := NOME_TYPE();--CRIA INSTANCIA 
BEGIN
NOME_TABLE.EXTEND; --ALOCA/CRIA UMA NOVA LINHA
NOME_TABLE(1) := 'JOÃO';
NOME_TABLE.EXTEND;
NOME_TABLE(2) = 'MARIA';
Dbms_Output.Put_Line('NOME 1: '||NOME_TABLE(1));
...
END;

--MATRIZ DE VARCHAR
DECLARE
TYPE TIPO IS TABLE OF VARCHAR(30) INDEX BY VARCHAR(2); --MATRIZ DE VARCHAR DECLARADA NO FINAL COM NO MAXIMO '2 CASAS'
UF_CAPITAL TIPO; --UF QUE É DO TIPO DA MATRIZ
BEGIN
UF_CAPITAL('RS') := 'PORTO ALEGRE';
UF_CAPITAL('SP') := 'SÃO PAULO';
UF_CAPITAL('MG') := 'MINAS GERAIS';
Dbms_Output.Put_Line(UF_CAPITAL('RJ'));
...
END;

--VARRAY
DECLARE
TYPE NOME_VARRAY IS VARRAY(5) OF *TABELA*.NOME%TYPE; --VARRAY TEM A MESMA FUNÇÃO DO TABLE OF (MATRIZ) LIMITADO A 5 INDICES
NOME_VETOR NOME_VARRAY := NOME_VARRAY(); --INSTANCIA DE VARRAY
BEGIN
NOME_VETOR.EXTEND;
NOME_VETOR(1) := 'JOAO';
Dbms_Output.Put_Line(NOME_VETOR(1));
END;
