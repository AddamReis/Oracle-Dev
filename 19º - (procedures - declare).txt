--quando iniciar com p é parametro e com v é variavel
CREATE OR REPLACE PROCEDURE NOME_PROC(PCOD_CURSO NUMBER) IS
BEGIN
UPDATE *TABELA* SET
VALOR = VALOR * 1.1
WHERE COD_CURSO = PCOD_CURSO
END;

EXEC NOME_PROC();--PASSA O CODIGO DO CURSO A SER ALTERADO

--EXECUTANDO POR BLOCO ANONIMO 
DECLARE
VCOD INTEGER := &CODIGO;
BEGIN
NOME_PROC(VCOD);
END;
----------------------------------------------------------------

--SEMPRE QUE AS DECLARAÇÕES FOREM "OUT" É OBRIGATÓRIO PASSAR UMA VARIÁVEL POR CONTA DO RETORNO, QUANDO "IN" ACEITA NUMEROS FIXOS
--IN = ENTRADA / OUT = SAÍDA

CREATE OR REPLACE PROCEDURE NOME_PROC
(PCOD IN VARCHAR(10),
PCEP OUT *TABELA*.CEP%TYPE,
PSALARIO OUT NUMBER(10,2))
IS
BEGIN
SELECT CEP, SALARIO
INTO PCEP, PSALARIO
FROM *TABELA*
WHERE CODIGO = PCOD;
END;

--DECLARE = BLOCO ANONIMO
DECLARE 
VCOD VARCHAR(10) := &CODIGO;
VCEP INTEGER;
VSALARIO NUMBER(10,2);
BEGIN
--DUAS MANEIRAS DE CHAMAR A PROC
--1°:
NOME_PROC(vcod, vcep, vsalario);--NECESSÁRIO SEGUIR A ORDEM DAS DECLARAÇÕES DA PROC
--2°:
NOME_PROC(PCOD => vcod,
          PCEP => vcep,
          PSALARIO => vsalario);--NESTE CASO APONTA CADA ENTRADA PARA O PARAMETROS CORRESPONDENTE NA PROC
--exibe o retorno
Dbms_Output.Put_Line(VCOD);
...
END;
--------------------------------------------------------------------

--FAZENDO UMA PROC DE CONSULTA
CREATE OR REPLACE PROCEDURE NOME_PROC
(PREGISTRO IN OUT *TABELA*%ROWTYPE)--CRIA OBJETO COM TODO O CONTEUDO DA TABELA
IS
CURSOR NOME_CURSOR IN
SELECT * FROM *TABELA* WHERE COD_ALUNO = PREGISTRO.COD_ALUNO;
BEGIN
OPEN NOME_CURSOR;
FETCH NOME_CURSOR INTO PREGISTRO;
CLOSE NOME_CURSOR;
END;

DECLARE
REGISTRO *TABELA*%ROWTYPE;
BEGIN
REGISTRO.COD_ALUNO = 1;
NOME_PROC(REGISTRO);
Dbms_Output.Put_Line(REGISTRO.NOME);
Dbms_Output.Put_Line(REGISTRO.CIDADE || ' CEP: ' ||REGISTRO.CEP);
END;
------------------------------------------------------------------

--FORMATAÇÃO DE NUMERO DE TELEFONE
CREATE OR REPLACE FORMATA_NUMERO(PTELEFONE IN OUT VARCHAR)
IS
BEGIN
PTELEFONE := SubStr(PTELEFONE, 1, 4)|| '-' --INCLUÍ O TRAÇO APÓS O QUARTO NUMERO
             SubStr(PTELECONE, 5, 4);
END;

DECLARE
VTELEFONE VARCHAR2(10);
BEGIN
VTELEFONE := '12345678';
FORMATA_NUMERO(VTELEFONE);
Dbms_Output.Put_Line(VTELEFONE); --1234-5678
END;
